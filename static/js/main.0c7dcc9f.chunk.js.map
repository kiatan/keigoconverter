{"version":3,"sources":["App.js","reportWebVitals.js","i18n.js","index.js","logo.png"],"names":["lngs","en","nativeName","ja","KeigoConverter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isShowResult","userInput","apiResponse","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","value","console","log","preventDefault","prevState","exactVerb","t","react_default","a","createElement","onSubmit","className","type","name","placeholder","onChange","ResultT","data","React","Component","Result","word_type","word_sentences","language","_step","wordSentenceDOM","wordSentenceContent","_iterator","_createForOfIteratorHelper","entries","s","n","done","_ref3","_ref2","slicedToArray","index","word_sentence","sentences","length","push","key","word","buildSentenceDOM","FormDialogT","wordSentence","err","e","f","form","_step2","sentenceDOM","_iterator2","_ref6","_ref5","sentence","sentence_ja","sentence_en","_step3","ret","_iterator3","_ref9","_ref8","plain","filter","polite","honorific","humble","plain_sentences","buildWordSentenceDOM","i18n","humble_sentences","honorific_sentences","polite_sentences","find","FormDialog","_this2","open","setOpen","requestBody","handleClickOpen","handleClose","handleAdd","handleRemove","handleInputChange","lang","list","toConsumableArray","concat","splice","_this3","Button","variant","onClick","Dialog","onClose","fullWidth","DialogTitle","DialogContent","DialogContentText","map","x","i","TextField","autoFocus","margin","id","label","required","multiline","startIcon","Delete_default","Add_default","DialogActions","meaning","Loading","dist_react_default","options","cursor","wrapperClassName","cursorClassName","loop","delay","onInit","typewriter","typeString","pauseFor","deleteAll","start","App","_useTranslation","useTranslation","src","logo","alt","changeLanguage","resolvedLanguage","keys","defaultChecked","htmlFor","KeigoConverterT","class","withTranslation","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","use","LanguageDetector","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","resources","translation","title","input","result","show","sample_sentences","no_sentences","info","contribute","action","submit","cancel","submit_for","another","remove","not_found","command","description","bikago","loading","normal","ReactDOM","render","StrictMode","src_App","document","getElementById","module","exports","p"],"mappings":"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","file":"static/js/main.0c7dcc9f.chunk.js","sourcesContent":["import logo from \"./logo.png\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { useTranslation, withTranslation } from \"react-i18next\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst lngs = {\r\n  en: { nativeName: \"English\" },\r\n  ja: { nativeName: \"Japanese\" },\r\n};\r\n\r\nfunction App() {\r\n  const { t, i18n } = useTranslation();\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"logo-group\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p className=\"title\">{t(\"title\")}</p>\r\n        </div>\r\n        <div className=\"switch\">\r\n          <input\r\n            id=\"language-toggle\"\r\n            className=\"check-toggle check-toggle-round-flat\"\r\n            type=\"checkbox\"\r\n            onClick={() => {\r\n              i18n.changeLanguage(\r\n                i18n.resolvedLanguage === Object.keys(lngs)[0]\r\n                  ? Object.keys(lngs)[1]\r\n                  : Object.keys(lngs)[0]\r\n              );\r\n            }}\r\n            defaultChecked={i18n.resolvedLanguage === Object.keys(lngs)[0]}\r\n          />\r\n          <label htmlFor=\"language-toggle\"></label>\r\n          <span className=\"on\">{t(\"lang.ja\")}</span>\r\n          <span className=\"off\">{t(\"lang.en\")}</span>\r\n        </div>\r\n      </header>\r\n      <KeigoConverterT class=\"keigo-converter\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nclass KeigoConverter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isShowResult: false, userInput: \"\", apiResponse: [] };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      userInput: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    console.log(\"A word was submitted: \" + this.state.userInput);\r\n    event.preventDefault();\r\n    this.setState((prevState) => ({\r\n      isShowResult: !prevState.isShowResult,\r\n      // apiResponse: [],\r\n      // apiResponse: notFound,\r\n      apiResponse: exactVerb,\r\n      // apiResponse: exactBikago,\r\n      // apiResponse: exactNoun,\r\n      // apiResponse: formulaVerb,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"word\"\r\n            placeholder={t(\"input\")}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            className=\"input-button\"\r\n            type=\"submit\"\r\n            value={t(\"result.show\")}\r\n          />\r\n        </form>\r\n        {/* <LoadingT /> */}\r\n        <div className=\"results\">\r\n          <ResultT\r\n            isShowResult={this.state.isShowResult}\r\n            data={this.state.apiResponse}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Result extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  buildWordSentenceDOM(word_type, word_sentences, language) {\r\n    const { t } = this.props;\r\n    var wordSentenceDOM = [];\r\n    var wordSentenceContent = [];\r\n\r\n    for (const [index, word_sentence] of word_sentences.entries()) {\r\n      if (!word_sentence.sentences.length && word_type !== \"formula_verb\") {\r\n        wordSentenceContent.push(\r\n          <div key={index + \"-word-sentence\"}>\r\n            <div className=\"word-sentence-word\">{word_sentence.word}</div>\r\n            <div className=\"sentences-no\">{t(\"result.no_sentences.info\")}</div>\r\n            <div className=\"sentences-no\">\r\n              {t(\"result.no_sentences.contribute\")}\r\n            </div>\r\n            <div className=\"sentences-no-action\">\r\n              <FormDialogT wordSentence={word_sentence} />\r\n            </div>\r\n          </div>\r\n        );\r\n      } else if (word_type === \"formula_verb\") {\r\n        wordSentenceContent.push(\r\n          <div key={index + \"-word-sentence\"}>\r\n            <div className=\"word-sentence-word\">{word_sentence.word}</div>\r\n          </div>\r\n        );\r\n      } else {\r\n        wordSentenceContent.push(\r\n          <div key={index + \"-word-sentence\"}>\r\n            <div className=\"word-sentence-word\">{word_sentence.word}</div>\r\n            <div className=\"sentences-label\">\r\n              {t(\"result.sample_sentences\")}\r\n            </div>\r\n            <ol className=\"word-sentence-sentences\">\r\n              {this.buildSentenceDOM(word_sentence, language)}\r\n            </ol>\r\n          </div>\r\n        );\r\n      }\r\n      if (index < word_sentences.length - 1)\r\n        wordSentenceContent.push(\r\n          <hr key={index + \"-word-sentence\" + \"-hr\"}></hr>\r\n        );\r\n    }\r\n\r\n    wordSentenceDOM.push(\r\n      <div\r\n        className=\"word-sentence\"\r\n        key={word_sentences[0].form + \"-word-sentence\"}\r\n      >\r\n        <div className=\"word-sentence-title\">\r\n          {t(\"result.\" + word_sentences[0].form + \".title\")}\r\n          <span className=\"word-sentence-description\">\r\n            {t(\"result.\" + word_sentences[0].form + \".description\")}\r\n          </span>\r\n        </div>\r\n        {wordSentenceContent}\r\n      </div>\r\n    );\r\n\r\n    return wordSentenceDOM;\r\n  }\r\n\r\n  buildSentenceDOM(word_sentence, language) {\r\n    var sentenceDOM = [];\r\n    const className = word_sentence.form + \"-sentence word-sentence-sentence\";\r\n    for (const [index, sentence] of word_sentence.sentences.entries()) {\r\n      if (language === \"en\") {\r\n        sentenceDOM.push(\r\n          <li key={index + \"-sentence\"} className={className}>\r\n            <div>{sentence.sentence_ja}</div>\r\n            <div>{sentence.sentence_en}</div>\r\n          </li>\r\n        );\r\n      } else {\r\n        sentenceDOM.push(\r\n          <li key={index + \"-sentence\"} className={className}>\r\n            <div>{sentence.sentence_ja}</div>\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n    return sentenceDOM;\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    if (!this.props.isShowResult) return null;\r\n\r\n    if (this.props.data) {\r\n      let ret = [];\r\n      for (const [index, data] of this.props.data.entries()) {\r\n        if (data.word_type === \"not_found\") {\r\n          ret = (\r\n            <div className=\"not-found\">\r\n              {t(\"result.not_found.title\")}\r\n              <br></br>\r\n              {t(\"result.not_found.command\")}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (\r\n          data.word_type === \"exact_verb\" ||\r\n          data.word_type === \"exact_noun\" ||\r\n          data.word_type === \"formula_verb\"\r\n        ) {\r\n          const plain = data.word_sentences.filter((plain) => {\r\n            return plain.form === \"plain\";\r\n          });\r\n          const polite = data.word_sentences.filter((polite) => {\r\n            return polite.form === \"polite\";\r\n          });\r\n          const honorific = data.word_sentences.filter((honorific) => {\r\n            return honorific.form === \"honorific\";\r\n          });\r\n          const humble = data.word_sentences.filter((humble) => {\r\n            return humble.form === \"humble\";\r\n          });\r\n\r\n          var plain_sentences = plain.length\r\n            ? this.buildWordSentenceDOM(\r\n                data.word_type,\r\n                plain,\r\n                this.props.i18n.language\r\n              )\r\n            : null;\r\n          var humble_sentences = humble.length\r\n            ? this.buildWordSentenceDOM(\r\n                data.word_type,\r\n                humble,\r\n                this.props.i18n.language\r\n              )\r\n            : null;\r\n          var honorific_sentences = honorific.length\r\n            ? this.buildWordSentenceDOM(\r\n                data.word_type,\r\n                honorific,\r\n                this.props.i18n.language\r\n              )\r\n            : null;\r\n          var polite_sentences = polite.length\r\n            ? this.buildWordSentenceDOM(\r\n                data.word_type,\r\n                polite,\r\n                this.props.i18n.language\r\n              )\r\n            : null;\r\n\r\n          ret.push(\r\n            <div className=\"result\" key={index + \"-result\"}>\r\n              {plain_sentences}\r\n              {honorific_sentences}\r\n              {humble_sentences}\r\n              {polite_sentences}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (data.word_type === \"exact_bikago\") {\r\n          const polite = data.word_sentences.find((polite) => {\r\n            return polite.form === \"polite\";\r\n          });\r\n\r\n          ret.push(\r\n            <div className=\"result\">\r\n              <div className=\"word-sentence\">\r\n                <div className=\"word-sentence-title\">\r\n                  {t(\"result.bikago.title\")}\r\n                  <span className=\"word-sentence-description\">\r\n                    {t(\"result.bikago.description\")}\r\n                  </span>\r\n                </div>\r\n                <div className=\"word-sentence-word\">{polite.word}</div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    }\r\n\r\n    return (\r\n      <div className=\"not-found\">\r\n        {t(\"result.not_found.title\")}\r\n        <br></br>\r\n        {t(\"result.not_found.command\")}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass FormDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      setOpen: false,\r\n      requestBody: {\r\n        form: this.props.wordSentence.form,\r\n        word: this.props.wordSentence.word,\r\n        sentences: [],\r\n      },\r\n      sentences: [\r\n        {\r\n          sentence_ja: \"\",\r\n          sentence_en: \"\",\r\n          word: this.props.wordSentence.word,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      open: false,\r\n      requestBody: {\r\n        // reset values\r\n        form: this.props.wordSentence.form,\r\n        word: this.props.wordSentence.word,\r\n        sentences: [],\r\n      },\r\n      sentences: [\r\n        {\r\n          sentence_ja: \"\",\r\n          sentence_en: \"\",\r\n          word: this.props.wordSentence.word,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  handleInputChange(lang, event, index) {\r\n    const list = [...this.state.sentences];\r\n    if (lang === \"en\") list[index].sentence_en = event.target.value;\r\n    else list[index].sentence_ja = event.target.value;\r\n    this.setState({ sentences: list });\r\n  }\r\n\r\n  handleAdd() {\r\n    console.log(\"add\");\r\n    this.setState({\r\n      sentences: [\r\n        ...this.state.sentences,\r\n        {\r\n          sentence_ja: \"\",\r\n          sentence_en: \"\",\r\n          word: this.props.wordSentence.word,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  handleRemove(index) {\r\n    console.log(\"remove\");\r\n    const list = [...this.state.sentences];\r\n    list.splice(index, 1);\r\n    this.setState({ sentences: list });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    this.state.requestBody.sentences = this.state.sentences;\r\n\r\n    console.log(\"new request body\");\r\n    console.log(this.state.requestBody);\r\n\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    let ret = [];\r\n\r\n    ret.push(\r\n      <div key=\"submit-sentence\">\r\n        <Button variant=\"outlined\" onClick={this.handleClickOpen}>\r\n          {t(\"result.no_sentences.action\")}\r\n        </Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose} fullWidth>\r\n          <DialogTitle> {t(\"result.no_sentences.action\")}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              {t(\"result.no_sentences.submit_for\")}{\" \"}\r\n              {this.props.wordSentence.word}\r\n            </DialogContentText>\r\n            {this.state.sentences.map((x, i) => {\r\n              return (\r\n                <div key={\"submit-sentences-dynamic\" + i}>\r\n                  {/* Japanese Sentence */}\r\n                  <TextField\r\n                    autoFocus={i === 0}\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label={t(\"result.no_sentences.sentence\")}\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                    onChange={(e) => this.handleInputChange(\"ja\", e, i)}\r\n                    required\r\n                    multiline\r\n                  />\r\n                  {/* English Sentence */}\r\n                  {this.props.i18n.language === \"en\" && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label={t(\"result.no_sentences.sentence_en\")}\r\n                      fullWidth\r\n                      variant=\"standard\"\r\n                      value={x.sentence_en}\r\n                      onChange={(e) => this.handleInputChange(\"en\", e, i)}\r\n                      multiline\r\n                    />\r\n                  )}\r\n                  <div className=\"add-remove-sentence-buttons\">\r\n                    {/* Remove Button */}\r\n                    {this.state.sentences.length !== 1 && (\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() => this.handleRemove(i)}\r\n                        className=\"remove-sentence-button\"\r\n                        startIcon={<DeleteIcon />}\r\n                      >\r\n                        {t(\"result.no_sentences.remove\")}\r\n                      </Button>\r\n                    )}\r\n                    {/* Add Button */}\r\n                    {this.state.sentences.length - 1 === i && (\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        onClick={this.handleAdd}\r\n                        className=\"add-sentence-button\"\r\n                        startIcon={<AddIcon />}\r\n                      >\r\n                        {t(\"result.no_sentences.another\")}\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            {/* for debugging: printing */}\r\n            {/* <div style={{ marginTop: 20 }}>\r\n              {JSON.stringify(this.state.sentences)}\r\n            </div> */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose}>\r\n              {t(\"result.no_sentences.cancel\")}\r\n            </Button>\r\n            <Button onClick={(e) => this.handleSubmit(e)}>\r\n              {t(\"result.no_sentences.submit\")}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n\r\n    return ret;\r\n  }\r\n}\r\n\r\nconst exactVerb = [\r\n  {\r\n    word_type: \"exact_verb\",\r\n    word_sentences: [\r\n      {\r\n        form: \"plain\",\r\n        word: \"する\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"honorific\",\r\n        word: \"なさる\",\r\n        sentences: [\r\n          {\r\n            word: \"なさる\",\r\n            sentence_ja:\r\n              \"明日より熊本に出張なさるとのことで、お気をつけて行ってらっしゃいませ\",\r\n            sentence_en: \"English sentence\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        form: \"honorific\",\r\n        word: \"される\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"humble\",\r\n        word: \"いたす\",\r\n        sentences: [\r\n          {\r\n            word: \"いたす\",\r\n            sentence_ja: \"明日、お電話いたします\",\r\n            sentence_en: null,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        form: \"humble\",\r\n        word: \"させていただく\",\r\n        sentences: [\r\n          {\r\n            word: \"させていただく\",\r\n            sentence_ja: \"明日、お電話させていただきます\",\r\n            sentence_en: null,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        form: \"polite\",\r\n        word: \"します\",\r\n        sentences: [\r\n          {\r\n            word: \"します\",\r\n            sentence_ja: \"明日より熊本に出張します\",\r\n            sentence_en: null,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    meaning: null,\r\n  },\r\n];\r\n\r\nconst exactBikago = [\r\n  {\r\n    word_type: \"exact_bikago\",\r\n    meaning: \"\",\r\n    word_sentences: [\r\n      {\r\n        form: \"plain\",\r\n        word: \"家族\",\r\n      },\r\n      {\r\n        form: \"polite\",\r\n        word: \"ご家族\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst formulaVerb = [\r\n  {\r\n    word_type: \"formula_verb\",\r\n    word_sentences: [\r\n      {\r\n        form: \"plain\",\r\n        word: \"する\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"honorific\",\r\n        word: \"なさる\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"humble\",\r\n        word: \"いたす\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"humble\",\r\n        word: \"いたす2\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"polite\",\r\n        word: \"します\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"polite\",\r\n        word: \"します2\",\r\n        sentences: [],\r\n      },\r\n    ],\r\n    meaning: null,\r\n  },\r\n];\r\n\r\nconst exactNoun = [\r\n  {\r\n    word_type: \"exact_noun\",\r\n    word_sentences: [\r\n      {\r\n        form: \"honorific\",\r\n        word: \"貴紙\",\r\n        sentences: [\r\n          {\r\n            word: \"貴紙\",\r\n            sentence_ja:\r\n              \"貴紙平成○○年○○月○○日付朝刊に掲載されました「○○」の記事の中の○○の記載につきまして…\",\r\n            sentence_en: null,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        form: \"plain\",\r\n        word: \"\\n雑誌\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"humble\",\r\n        word: \"弊紙\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"humble\",\r\n        word: \"小紙\",\r\n        sentences: [],\r\n      },\r\n    ],\r\n    meaning: null,\r\n  },\r\n  {\r\n    word_type: \"exact_noun\",\r\n    word_sentences: [\r\n      {\r\n        form: \"honorific\",\r\n        word: \"貴紙\",\r\n        sentences: [\r\n          {\r\n            word: \"貴紙\",\r\n            sentence_ja:\r\n              \"貴紙平成○○年○○月○○日付朝刊に掲載されました「○○」の記事の中の○○の記載につきまして…\",\r\n            sentence_en: null,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        form: \"plain\",\r\n        word: \"新聞\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"humble\",\r\n        word: \"弊紙\",\r\n        sentences: [],\r\n      },\r\n      {\r\n        form: \"humble\",\r\n        word: \"小紙\",\r\n        sentences: [],\r\n      },\r\n    ],\r\n    meaning: null,\r\n  },\r\n];\r\n\r\nconst notFound = [\r\n  {\r\n    word_type: \"not_found\",\r\n    meaning: \"\",\r\n    word_sentences: [],\r\n  },\r\n];\r\n\r\nclass Loading extends React.Component {\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <div className=\"loading\">\r\n        <div>(:3 っ)っ</div>\r\n        <Typewriter\r\n          options={{\r\n            cursor: \"\",\r\n            wrapperClassName: \"loading-text\",\r\n            cursorClassName: \"loading-cursor\",\r\n            loop: true,\r\n            delay: 80,\r\n          }}\r\n          onInit={(typewriter) => {\r\n            typewriter\r\n              .typeString(t(\"loading.normal\"))\r\n              .pauseFor(500)\r\n              .deleteAll()\r\n              .typeString(t(\"loading.polite\"))\r\n              .pauseFor(500)\r\n              .deleteAll()\r\n              .start();\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\nconst KeigoConverterT = withTranslation()(KeigoConverter);\r\nconst ResultT = withTranslation()(Result);\r\nconst LoadingT = withTranslation()(Loading);\r\nconst FormDialogT = withTranslation()(FormDialog);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    debug: true,\r\n    fallbackLng: \"en\",\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    resources: {\r\n      en: {\r\n        translation: {\r\n          title: \"Keigo Converter\",\r\n          lang: {\r\n            ja: \"JA\",\r\n            en: \"EN\",\r\n          },\r\n          input: \"Type your word here\",\r\n          result: {\r\n            show: \"Convert to Keigo\",\r\n            sample_sentences: \"Example Sentences:\",\r\n            no_sentences: {\r\n              info: \"Sorry, we don't have an example sentence yet for this word.\",\r\n              contribute: \"Your contribution will be highly appreciated\",\r\n              action: \"Submit a sentence\",\r\n              sentence: \"Example sentence in Japanese\",\r\n              sentence_en: \"(Optional) English translation\",\r\n              submit: \"Submit\",\r\n              cancel: \"Cancel\",\r\n              submit_for: \"Write a sentence for: \",\r\n              another: \"Add another sentence\",\r\n              remove: \"Remove\"\r\n            },\r\n            not_found: {\r\n              title: \"Sorry, your input is not found in our database (｡╯︵╰｡)\",\r\n              command:\r\n                \"Please try again with a different word or submit to our database.\",\r\n            },\r\n            plain: {\r\n              title: \"Plain Form\",\r\n              description: \"Plain description\",\r\n            },\r\n            honorific: {\r\n              title: \"Honorific Form\",\r\n              description:\r\n                \"It is a special form or alternative word used when talking about superiors and customers. It is not used to talk about oneself. \",\r\n            },\r\n            humble: {\r\n              title: \"Humble Form\",\r\n              description:\r\n                \"It is used when describing one's actions or the actions of a person in one's in-group to others such as customers in business. Humble language tends to imply that one's actions are taking place in order to assist the other person.\",\r\n            },\r\n            polite: {\r\n              title: \"Polite Form\",\r\n              description:\r\n                \"Polite language can be used to refer to one's own actions or those of other people.\",\r\n            },\r\n            bikago: {\r\n              title: \"Bikago\",\r\n              description:\r\n                \"Embellishment of words. Bika means beautification. Bikago, at its basic understanding, is making one's speech sound more refined. Bikago elevates one's speech to a well-mannered style.\",\r\n            },\r\n          },\r\n          loading: {\r\n            normal: \"Loading...\",\r\n            polite: \"今しばらくお待ちください。\",\r\n          },\r\n        },\r\n      },\r\n      ja: {\r\n        translation: {\r\n          title: \"敬語コンバーター\",\r\n          lang: {\r\n            ja: \"JA\",\r\n            en: \"EN\",\r\n          },\r\n          input: \"言葉を入力してください\",\r\n          result: {\r\n            show: \"切り替える\",\r\n            sample_sentences: \"例文\",\r\n            no_sentences: {\r\n              info: \"申し訳ありませんが、この単語の例文はまだありません。\",\r\n              contribute: \"\",\r\n              action: \"例文を提出\",\r\n              sentence: \"例文\",\r\n              submit: \"提出\",\r\n              cancel: \"キャンセル\",\r\n              submit_for: \"この単語: \",\r\n              another: \"例文を追加\",\r\n              remove: \"削除\"\r\n            },\r\n            not_found: {\r\n              title:\r\n                \"申し訳ありませんが、入力はデータベースに見つかりません (｡╯︵╰｡)\",\r\n              command:\r\n                \"別の言葉でもう一度試すか、データベースに送信してください。\",\r\n            },\r\n            plain: {\r\n              title: \"普通\",\r\n              description: \"普通 description\",\r\n            },\r\n            honorific: {\r\n              title: \"尊敬語\",\r\n              description:\r\n                \"目上の人を敬う気持ちを表す表現の敬語です。謙譲語が相手に対して自分がへりくだる表現であるのに対し、尊敬語は相手を持ち上げることで、敬う気持ちを示します。\",\r\n            },\r\n            humble: {\r\n              title: \"謙譲語\",\r\n              description:\r\n                \"目上の人を敬う気持ちを表す表現の敬語です。尊敬語が相手を持ち上げる表現であるのに対し、謙譲語は、自分がへりくだることで、敬う気持ちを示します。\",\r\n            },\r\n            polite: {\r\n              title: \"丁寧語\",\r\n              description:\r\n                \"相手に対する言い回しを丁寧にすることで、敬意を表す言葉です。尊敬語や謙譲語のように相手を立てたり、自分を下げたりすることはしません。\",\r\n            },\r\n            bikago: {\r\n              title: \"美化後\",\r\n              description:\r\n                \"上品で美しい言葉遣いをするために使う表現のことです。ときにはその表現をやらわげるといった役割も果たします。人への敬意を表す表現ではありませんが、日本語では敬語に準ずるとしています。\",\r\n            },\r\n          },\r\n          loading: {\r\n            normal: \"ちょっと待って！\",\r\n            polite: \"今しばらくお待ちください。\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'normalize.css';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.857914f4.png\";"],"sourceRoot":""}